(define (average x y) (/ (+ x y) 2))

(define (make-point x y)
 (cons x y))
(define (get-point-x point)
  (car point))
(define (get-point-y point)
  (cdr point))

(define (make-segment start end)
  (cons start end))
(define (get-start-point segment)
  (car segment))
(define (get-end-point segment)
  (cdr segment))

(define (midpoint-segment segment)
  (let ((start-point (get-start-point segment))
        (end-point (get-end-point segment)))
      (make-point
        (average (get-point-x start-point) (get-point-x end-point))
        (average (get-point-y start-point) (get-point-y end-point))
      )
  )
)

(define (print-point p)
  (newline)
  (display "(")
  (display (get-point-x p))
  (display ".")
  (display (get-point-y p))
  (display ")")
)

(define sp (make-point 0 0))
(define ep (make-point 4 4))
(define line (make-segment sp ep))
(print-point (midpoint-segment line))